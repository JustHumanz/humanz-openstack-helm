# This is a basic workflow to help you get started with Actions

name: OpenStack Helm workflows

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    paths-ignore:
      - '.github/**'
    branches: [ "master" ]
    types: [opened, reopened]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FEATURES: ${{ vars.OPENSTACK_UBUNTU_VERSION }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Install wireguard
      - name: Install wireguard
        shell: bash
        run: |
          sudo apt update && sudo apt install wireguard curl -y

      # Get vpn config
      - name: Decrypt wg.conf with GPG
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output vpn/wg.conf vpn/wg.conf.enc

      # start vpn config
      - name: Start wg
        run: |
          sudo wg-quick up vpn/wg.conf

      # Check VPN connection
      - name: Check keystone endpoint
        shell: bash
        run: |
          curl http://keystone.ctl1-humanz.cloud 

      # Install Helm
      - name: Install helm 
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | sudo bash && mkdir -p ~/.kube/

      # Drop kubeconfig
      - name: Create kubeconfig
        run: |
          mkdir -p ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config

      # Add helm repo & Install plugin
      - name: openstack helm repo&plugin
        shell: bash
        run: |
          /usr/local/bin/helm repo add openstack-helm https://tarballs.opendev.org/openstack/openstack-helm
          /usr/local/bin/helm plugin install https://opendev.org/openstack/openstack-helm-plugin

      # Get password config
      - name: Decrypt all GPG pasword.yaml
        run: |
          for i in $(find . -name password.yaml.enc);
          do
              passfile=$(echo $i | sed 's/.enc//g')
              gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output $passfile $i
          done        

      # Run helm upgrade
      - name: Update nova config
        if: contains(github.event.pull_request.labels.*.name, 'nova')
        run: |
          helm upgrade --install nova openstack-helm/nova \
              --timeout=600s \
              --namespace=openstack \
              --set bootstrap.wait_for_computes.enabled=true \
              --set conf.ceph.enabled=true \
              --set volume.class_name=ceph-rbd \
              $(helm osh get-values-overrides -c nova ${FEATURES} values_overrides/domain values_overrides/password values_overrides/nova-conf)

      # Run helm upgrade
      - name: Update keystone config
        if: contains(github.event.pull_request.labels.*.name, 'keystone')
        run: |
          helm upgrade --install keystone openstack-helm/keystone \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              $(helm osh get-values-overrides -c keystone ${FEATURES} values_overrides/domain values_overrides/password values_overrides/keystone-conf)

      # Run helm upgrade
      - name: Update heat config
        if: contains(github.event.pull_request.labels.*.name, 'heat')
        run: |
          helm upgrade --install heat openstack-helm/heat \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              $(helm osh get-values-overrides -c heat ${FEATURES} values_overrides/domain values_overrides/password values_overrides/heat-conf)

      # Run helm upgrade
      - name: Update glance config
        if: contains(github.event.pull_request.labels.*.name, 'glance')
        run: |
          helm upgrade --install glance openstack-helm/glance \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              --set volume.size=10Gi \
              $(helm osh get-values-overrides -c glance ${FEATURES} values_overrides/domain values_overrides/password values_overrides/glance-conf)

      # Run helm upgrade
      - name: Update cinder config
        if: contains(github.event.pull_request.labels.*.name, 'cinder')
        run: |
          helm upgrade --install cinder openstack-helm/cinder \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              $(helm osh get-values-overrides -c cinder ${FEATURES} values_overrides/domain values_overrides/password values_overrides/cinder-conf)

      # Run helm upgrade
      - name: Update placement config
        if: contains(github.event.pull_request.labels.*.name, 'placement')
        run: |
          helm upgrade --install placement openstack-helm/placement \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              $(helm osh get-values-overrides -c placement ${FEATURES} values_overrides/password values_overrides/placement-conf)

      # Run helm upgrade
      - name: Update neutron config
        if: contains(github.event.pull_request.labels.*.name, 'neutron')
        run: |
          helm upgrade --install neutron openstack-helm/neutron \
              --namespace=openstack \
              $(helm osh get-values-overrides -c neutron ${FEATURES} values_overrides/domain values_overrides/password values_overrides/neutron-conf)

      # Run helm upgrade
      - name: Update horizon config
        if: contains(github.event.pull_request.labels.*.name, 'horizon')
        run: |
          helm upgrade --install horizon openstack-helm/horizon \
              --timeout=600s \
              --namespace=openstack \
              --set volume.class_name=ceph-rbd \
              --set volume.size=10Gi \
              $(helm osh get-values-overrides -c horizon ${FEATURES} values_overrides/domain values_overrides/password values_overrides/horizon-conf)
